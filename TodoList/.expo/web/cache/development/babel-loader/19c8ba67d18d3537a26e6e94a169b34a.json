{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mokss/Work/RN-PRACTICE/src/screens/TodoScreen.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { FontAwesome, AntDesign } from '@expo/vector-icons';\nimport { THEME } from \"../theme\";\nimport AppCard from \"../components/UI/AppCard\";\nimport EditModal from \"../components/EditModal\";\nimport AppTextBold from \"../components/UI/AppTextBold\";\nimport AppButton from \"../components/UI/AppButton\";\n\nfunction TodoScreen(_ref) {\n  var goBack = _ref.goBack,\n      todo = _ref.todo,\n      onRemove = _ref.onRemove,\n      onSave = _ref.onSave;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  function saveHandler(title) {\n    onSave(todo.id, title);\n    setModal(false);\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(EditModal, {\n    value: todo.title,\n    visible: modal,\n    onCancel: function onCancel() {\n      return setModal(false);\n    },\n    onSave: saveHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(AppCard, {\n    style: styles.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(AppTextBold, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, todo.title), React.createElement(AppButton, {\n    onPress: function onPress() {\n      return setModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"edit\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(AppButton, {\n    onPress: goBack,\n    color: THEME.GREY_COLOR,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"back\",\n    size: 20,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(AppButton, {\n    color: THEME.DANGER_COLOR,\n    onPress: function onPress() {\n      return onRemove(todo.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"trash\",\n    size: 20,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))));\n}\n\nvar styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15\n  },\n  button: {\n    width: Dimensions.get('window').width > 400 ? 150 : 100\n  },\n  title: {\n    fontSize: 20\n  }\n});\nexport default TodoScreen;","map":{"version":3,"sources":["/home/mokss/Work/RN-PRACTICE/src/screens/TodoScreen.tsx"],"names":["React","useState","FontAwesome","AntDesign","THEME","AppCard","EditModal","AppTextBold","AppButton","TodoScreen","goBack","todo","onRemove","onSave","modal","setModal","saveHandler","title","id","styles","card","buttons","button","GREY_COLOR","DANGER_COLOR","StyleSheet","create","flexDirection","justifyContent","marginBottom","padding","width","Dimensions","get","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport {FontAwesome, AntDesign} from '@expo/vector-icons';\nimport { THEME } from '../theme';\nimport AppCard from '../components/UI/AppCard';\nimport EditModal from '../components/EditModal';\nimport AppTextBold from '../components/UI/AppTextBold';\nimport AppButton from '../components/UI/AppButton';\n\ninterface TodoScreen {\n  onRemove(id: string): void;\n  goBack(): void;\n  onSave(id: string, value: string): void;\n  todo: {\n    title: string;\n    id: string;\n  };\n}\n\nfunction TodoScreen({ goBack, todo, onRemove, onSave }: TodoScreen) {\n  const [modal, setModal] = useState(false);\n\n  function saveHandler(title: string) {\n    onSave(todo.id, title);\n    setModal(false);\n  }\n\n  return (\n    <View>\n      <EditModal\n        value={todo.title}\n        visible={modal}\n        onCancel={() => setModal(false)}\n        onSave={saveHandler}\n      />\n\n      <AppCard style={styles.card}>\n        <AppTextBold style={styles.title}>{todo.title}</AppTextBold>\n        <AppButton onPress={() => setModal(true)} >\n        <FontAwesome name='edit' size={20}/>\n        </AppButton>\n      </AppCard>\n\n      <View style={styles.buttons}>\n        <View style={styles.button}>\n          <AppButton onPress={goBack} color={THEME.GREY_COLOR}>\n            <AntDesign name='back' size={20} color='#fff'/>\n          </AppButton>\n        </View>\n        <View style={styles.button}>\n          <AppButton\n            color={THEME.DANGER_COLOR}\n            onPress={() => onRemove(todo.id)}\n          >\n            <FontAwesome name='trash' size={20} color='#fff'/>\n          </AppButton>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15,\n  },\n  button: {\n    width: Dimensions.get('window').width > 400 ? 150 : 100,\n  },\n  title: {\n    fontSize: 20,\n  },\n});\n\nexport default TodoScreen;\n"]},"metadata":{},"sourceType":"module"}