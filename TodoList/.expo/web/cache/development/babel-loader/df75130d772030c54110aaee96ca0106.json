{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/mokss/Work/RN-PRACTICE/src/components/Navbar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { THEME } from \"../theme\";\nimport AppTextBold from \"./UI/AppTextBold\";\n\nfunction Navbar(props) {\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.navbar), Platform.select({\n      android: styles.navbarAndroid,\n      ios: styles.navbarIos\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(AppTextBold, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, props.title));\n}\n\nvar styles = StyleSheet.create({\n  navbar: {\n    height: 70,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 10\n  },\n  navbarAndroid: {\n    backgroundColor: THEME.MAIN_COLOR,\n    borderBottomColor: THEME.MAIN_COLOR,\n    borderBottomWidth: 1\n  },\n  navbarIos: {\n    borderBottomColor: THEME.MAIN_COLOR,\n    borderBottomWidth: 1\n  },\n  text: {\n    color: Platform.OS === 'ios' ? THEME.MAIN_COLOR : 'white',\n    fontSize: 20\n  }\n});\nexport default Navbar;","map":{"version":3,"sources":["/home/mokss/Work/RN-PRACTICE/src/components/Navbar.tsx"],"names":["React","THEME","AppTextBold","Navbar","props","styles","navbar","Platform","select","android","navbarAndroid","ios","navbarIos","text","title","StyleSheet","create","height","alignItems","justifyContent","paddingBottom","backgroundColor","MAIN_COLOR","borderBottomColor","borderBottomWidth","color","OS","fontSize"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,KAAT;AACA,OAAOC,WAAP;;AAMA,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;AAClC,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAC,MAAM,CAACC,MADP,GAEAC,QAAQ,CAACC,MAAT,CAAgB;AACjBC,MAAAA,OAAO,EAAEJ,MAAM,CAACK,aADC;AAEjBC,MAAAA,GAAG,EAAEN,MAAM,CAACO;AAFK,KAAhB,CAFA,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEP,MAAM,CAACQ,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCT,KAAK,CAACU,KAAxC,CATF,CADF;AAaD;;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,cAAc,EAAE,UAHV;AAINC,IAAAA,aAAa,EAAE;AAJT,GADuB;AAO/BV,EAAAA,aAAa,EAAE;AACbW,IAAAA,eAAe,EAAEpB,KAAK,CAACqB,UADV;AAEbC,IAAAA,iBAAiB,EAAEtB,KAAK,CAACqB,UAFZ;AAGbE,IAAAA,iBAAiB,EAAE;AAHN,GAPgB;AAY/BZ,EAAAA,SAAS,EAAE;AACTW,IAAAA,iBAAiB,EAAEtB,KAAK,CAACqB,UADhB;AAETE,IAAAA,iBAAiB,EAAE;AAFV,GAZoB;AAgB/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,KAAK,EAAElB,QAAQ,CAACmB,EAAT,KAAgB,KAAhB,GAAwBzB,KAAK,CAACqB,UAA9B,GAA2C,OAD9C;AAEJK,IAAAA,QAAQ,EAAE;AAFN;AAhByB,CAAlB,CAAf;AAsBA,eAAexB,MAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { THEME } from '../theme';\nimport AppTextBold from './UI/AppTextBold';\n\ninterface NavbarProps {\n  title: string;\n}\n\nfunction Navbar(props: NavbarProps) {\n  return (\n    <View\n      style={{\n        ...styles.navbar,\n        ...Platform.select({\n          android: styles.navbarAndroid,\n          ios: styles.navbarIos,\n        }),\n      }}\n    >\n      <AppTextBold style={styles.text}>{props.title}</AppTextBold>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  navbar: {\n    height: 70,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 10,\n  },\n  navbarAndroid: {\n    backgroundColor: THEME.MAIN_COLOR,\n    borderBottomColor: THEME.MAIN_COLOR,\n    borderBottomWidth: 1\n  },\n  navbarIos: {\n    borderBottomColor: THEME.MAIN_COLOR,\n    borderBottomWidth: 1,\n  },\n  text: {\n    color: Platform.OS === 'ios' ? THEME.MAIN_COLOR : 'white',\n    fontSize: 20,\n  },\n});\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}