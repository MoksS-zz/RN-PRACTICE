{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mokss/Work/RN-PRACTICE/src/screens/MainScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AddTodo from \"../components/AddTodo\";\nimport Todo from \"../components/Todo\";\nimport { THEME } from \"../theme\";\n\nfunction MainScreen(_ref) {\n  var addTodo = _ref.addTodo,\n      todos = _ref.todos,\n      removeTodo = _ref.removeTodo,\n      openTodo = _ref.openTodo;\n\n  var _useState = useState(Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2),\n      _useState2 = _slicedToArray(_useState, 2),\n      deviceWidth = _useState2[0],\n      setDeviceWidth = _useState2[1];\n\n  useEffect(function () {\n    var update = function update() {\n      var width = Dimensions.get('window').width - THEME.PADDING_HORIZONTAL * 2;\n      setDeviceWidth(width);\n    };\n\n    Dimensions.addEventListener('change', update);\n    return function () {\n      Dimensions.removeEventListener('change', update);\n    };\n  });\n  var content = React.createElement(View, {\n    style: {\n      width: deviceWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: todos,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Todo, {\n        todo: item,\n        onRemove: removeTodo,\n        openTodo: openTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n\n  if (todos.length === 0) {\n    content = React.createElement(View, {\n      style: styles.imgWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.img,\n      source: require(\"../../assets/no-items.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(AddTodo, {\n    onSubmit: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), content);\n}\n\nvar styles = StyleSheet.create({\n  imgWrap: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    height: 300\n  },\n  img: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'contain'\n  }\n});\nexport default MainScreen;","map":{"version":3,"sources":["/home/mokss/Work/RN-PRACTICE/src/screens/MainScreen.tsx"],"names":["React","useState","useEffect","AddTodo","Todo","THEME","MainScreen","addTodo","todos","removeTodo","openTodo","Dimensions","get","width","PADDING_HORIZONTAL","deviceWidth","setDeviceWidth","update","addEventListener","removeEventListener","content","item","id","length","styles","imgWrap","img","require","StyleSheet","create","alignItems","justifyContent","padding","height","resizeMode"],"mappings":";;AAAA,OAAOA,KAAP,IAAgCC,QAAhC,EAA0CC,SAA1C,QAA2D,OAA3D;;;;;;AAEA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,SAASC,KAAT;;AASA,SAASC,UAAT,OAA0E;AAAA,MAApDC,OAAoD,QAApDA,OAAoD;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;;AAAA,kBAClCT,QAAQ,CAACU,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAkCR,KAAK,CAACS,kBAAN,GAA2B,CAA9D,CAD0B;AAAA;AAAA,MACjEC,WADiE;AAAA,MACpDC,cADoD;;AAGxEd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,UAAMJ,KAAK,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAkCR,KAAK,CAACS,kBAAN,GAA2B,CAA3E;AACAE,MAAAA,cAAc,CAACH,KAAD,CAAd;AACD,KAHD;;AAIAF,IAAAA,UAAU,CAACO,gBAAX,CAA4B,QAA5B,EAAsCD,MAAtC;AAEA,WAAO,YAAM;AACXN,MAAAA,UAAU,CAACQ,mBAAX,CAA+B,QAA/B,EAAyCF,MAAzC;AACD,KAFD;AAGD,GAVQ,CAAT;AAYA,MAAIG,OAAO,GACT,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACP,MAAAA,KAAK,EAAEE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEP,KADR;AAEE,IAAA,YAAY,EAAE,sBAACa,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGD,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,QAAQ,EAAEZ,UAA5B;AAAwC,QAAA,QAAQ,EAAEC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAYA,MAAIF,KAAK,CAACe,MAAN,KAAiB,CAArB,EAAwB;AACtBH,IAAAA,OAAO,GACL,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,GADhB;AAEE,MAAA,MAAM,EAAEC,OAAO,6BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEpB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGa,OAFH,CADF;AAMD;;AAED,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,OAAO,EAAE,EAHF;AAIPC,IAAAA,MAAM,EAAE;AAJD,GADsB;AAO/BP,EAAAA,GAAG,EAAE;AACHb,IAAAA,KAAK,EAAE,MADJ;AAEHoB,IAAAA,MAAM,EAAE,MAFL;AAGHC,IAAAA,UAAU,EAAE;AAHT;AAP0B,CAAlB,CAAf;AAcA,eAAe5B,UAAf","sourcesContent":["import React, { ComponentState, useState, useEffect } from 'react';\nimport { StyleSheet, View, FlatList, Image, Dimensions } from 'react-native';\nimport AddTodo from '../components/AddTodo';\nimport Todo from '../components/Todo';\nimport { THEME } from '../theme';\n\ninterface MainScreen {\n  addTodo(title: string): void;\n  todos: ComponentState;\n  removeTodo(id: string): void;\n  openTodo(id: string): void;\n}\n\nfunction MainScreen({ addTodo, todos, removeTodo, openTodo }: MainScreen) {\n  const [deviceWidth, setDeviceWidth] = useState(Dimensions.get('window').width - (THEME.PADDING_HORIZONTAL * 2));\n\n  useEffect(() => {\n    const update = () => {\n      const width = Dimensions.get('window').width - (THEME.PADDING_HORIZONTAL * 2);\n      setDeviceWidth(width);\n    }\n    Dimensions.addEventListener('change', update);\n\n    return () => {\n      Dimensions.removeEventListener('change', update);\n    }\n  });\n\n  let content = (\n    <View style={{width: deviceWidth }}>\n      <FlatList\n        data={todos}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <Todo todo={item} onRemove={removeTodo} openTodo={openTodo} />\n        )}\n      />\n    </View>\n  );\n\n  if (todos.length === 0) {\n    content = (\n      <View style={styles.imgWrap}>\n        <Image\n          style={styles.img}\n          source={require('../../assets/no-items.png')}\n          // source={{\n          //   uri:\n          //     'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png',\n          // }}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View>\n      <AddTodo onSubmit={addTodo} />\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  imgWrap: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    height: 300,\n  },\n  img: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'contain',\n  },\n});\n\nexport default MainScreen;\n"]},"metadata":{},"sourceType":"module"}