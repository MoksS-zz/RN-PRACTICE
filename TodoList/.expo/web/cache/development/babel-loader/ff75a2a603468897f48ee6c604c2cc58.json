{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/mokss/Work/RN-PRACTICE/App.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Navbar from \"./src/components/Navbar\";\nimport MainScreen from \"./src/screens/MainScreen\";\nimport TodoScreen from \"./src/screens/TodoScreen\";\nimport { THEME } from \"./src/theme\";\n\nfunction loadApplication() {\n  return _regeneratorRuntime.async(function loadApplication$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync({\n            'roboto-regular': require(\"./assets/fonts/Roboto-Regular.ttf\"),\n            'roboto-bold': require(\"./assets/fonts/Roboto-Bold.ttf\")\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var _useState3 = useState([{\n    id: '1',\n    title: 'RN'\n  }, {\n    id: '2',\n    title: 'RN RN'\n  }, {\n    id: '3',\n    title: 'RN RN RN'\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      todoId = _useState6[0],\n      setTodoId = _useState6[1];\n\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: loadApplication,\n      onError: function onError(err) {\n        return console.error(err);\n      },\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  }\n\n  function addTodo(title) {\n    setTodos(function (prev) {\n      return [].concat(_toConsumableArray(prev), [{\n        id: Date.now().toString(),\n        title: title\n      }]);\n    });\n  }\n\n  function removeTodo(id) {\n    var todo = todos.find(function (todo) {\n      return todo.id === id;\n    });\n    Alert.alert('Удаление элемента', \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442? \" + (todo == null ? void 0 : todo.title), [{\n      text: 'Отмена',\n      style: 'cancel'\n    }, {\n      text: 'Удалить',\n      style: 'destructive',\n      onPress: function onPress() {\n        console.log('ef[f[f[f');\n        setTodoId(null);\n        setTodos(function (prev) {\n          return prev.filter(function (todo) {\n            return todo.id !== id;\n          });\n        });\n      }\n    }], {\n      cancelable: false\n    });\n  }\n\n  function updateTodo(id, title) {\n    setTodos(function (prev) {\n      return prev.map(function (todo) {\n        if (todo.id === id) {\n          todo.title = title;\n        }\n\n        return todo;\n      });\n    });\n  }\n\n  var content = React.createElement(MainScreen, {\n    todos: todos,\n    addTodo: addTodo,\n    removeTodo: removeTodo,\n    openTodo: setTodoId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  });\n\n  if (todoId) {\n    var selectedTodo = todos.find(function (todo) {\n      return todo.id === todoId;\n    });\n    content = React.createElement(TodoScreen, {\n      onRemove: removeTodo,\n      goBack: function goBack() {\n        return setTodoId(null);\n      },\n      onSave: updateTodo,\n      todo: selectedTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(Navbar, {\n    title: \"Todo App!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, content));\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: THEME.PADDING_HORIZONTAL,\n    paddingVertical: 20\n  }\n});","map":{"version":3,"sources":["/home/mokss/Work/RN-PRACTICE/App.tsx"],"names":["React","useState","Font","AppLoading","Navbar","MainScreen","TodoScreen","THEME","loadApplication","loadAsync","require","App","isReady","setIsReady","id","title","todos","setTodos","todoId","setTodoId","err","console","error","addTodo","prev","Date","now","toString","removeTodo","todo","find","Alert","alert","text","style","onPress","log","filter","cancelable","updateTodo","map","content","selectedTodo","styles","container","StyleSheet","create","paddingHorizontal","PADDING_HORIZONTAL","paddingVertical"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,SAASC,KAAT;;AAEA,SAAeC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQN,IAAI,CAACO,SAAL,CAAe;AACnB,8BAAkBC,OAAO,qCADN;AAEnB,2BAAeA,OAAO;AAFH,WAAf,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACEV,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACrBW,OADqB;AAAA,MACZC,UADY;;AAAA,mBAEFZ,QAAQ,CAAc,CAC9C;AAAEa,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAD8C,EAE9C;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAF8C,EAG9C;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAH8C,CAAd,CAFN;AAAA;AAAA,MAErBC,KAFqB;AAAA,MAEdC,QAFc;;AAAA,mBAOAhB,QAAQ,CAAgB,IAAhB,CAPR;AAAA;AAAA,MAOrBiB,MAPqB;AAAA,MAObC,SAPa;;AAS5B,MAAI,CAACP,OAAL,EAAc;AACZ,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,eADd;AAEE,MAAA,OAAO,EAAE,iBAACY,GAAD;AAAA,eAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAT;AAAA,OAFX;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMP,UAAU,CAAC,IAAD,CAAhB;AAAA,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,WAASU,OAAT,CAAiBR,KAAjB,EAAsC;AACpCE,IAAAA,QAAQ,CAAC,UAACO,IAAD;AAAA,0CACJA,IADI,IAEP;AACEV,QAAAA,EAAE,EAAEW,IAAI,CAACC,GAAL,GAAWC,QAAX,EADN;AAEEZ,QAAAA,KAAK,EAAEA;AAFT,OAFO;AAAA,KAAD,CAAR;AAOD;;AAED,WAASa,UAAT,CAAoBd,EAApB,EAAgC;AAC9B,QAAMe,IAAI,GAAGb,KAAK,CAACc,IAAN,CAAW,UAACD,IAAD;AAAA,aAAUA,IAAI,CAACf,EAAL,KAAYA,EAAtB;AAAA,KAAX,CAAb;AAEAiB,IAAAA,KAAK,CAACC,KAAN,CACE,mBADF,+FAEsBH,IAFtB,oBAEsBA,IAAI,CAAEd,KAF5B,GAGE,CACE;AACEkB,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADF,EAKE;AACED,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,OAAO,EAAE,mBAAM;AACbd,QAAAA,OAAO,CAACe,GAAR,CAAY,UAAZ;AACAjB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,QAAAA,QAAQ,CAAC,UAACO,IAAD;AAAA,iBAAUA,IAAI,CAACa,MAAL,CAAY,UAACR,IAAD;AAAA,mBAAUA,IAAI,CAACf,EAAL,KAAYA,EAAtB;AAAA,WAAZ,CAAV;AAAA,SAAD,CAAR;AACD;AAPH,KALF,CAHF,EAkBE;AAAEwB,MAAAA,UAAU,EAAE;AAAd,KAlBF;AAoBD;;AAED,WAASC,UAAT,CAAoBzB,EAApB,EAAgCC,KAAhC,EAA+C;AAC7CE,IAAAA,QAAQ,CAAC,UAACO,IAAD;AAAA,aACPA,IAAI,CAACgB,GAAL,CAAS,UAACX,IAAD,EAAU;AACjB,YAAIA,IAAI,CAACf,EAAL,KAAYA,EAAhB,EAAoB;AAClBe,UAAAA,IAAI,CAACd,KAAL,GAAaA,KAAb;AACD;;AACD,eAAOc,IAAP;AACD,OALD,CADO;AAAA,KAAD,CAAR;AAQD;;AAED,MAAIY,OAAO,GACT,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEzB,KADT;AAEE,IAAA,OAAO,EAAEO,OAFX;AAGE,IAAA,UAAU,EAAEK,UAHd;AAIE,IAAA,QAAQ,EAAET,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AASA,MAAID,MAAJ,EAAY;AACV,QAAMwB,YAAY,GAAG1B,KAAK,CAACc,IAAN,CAAW,UAACD,IAAD;AAAA,aAAUA,IAAI,CAACf,EAAL,KAAYI,MAAtB;AAAA,KAAX,CAArB;AACAuB,IAAAA,OAAO,GACL,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAEb,UADZ;AAEE,MAAA,MAAM,EAAE;AAAA,eAAMT,SAAS,CAAC,IAAD,CAAf;AAAA,OAFV;AAGE,MAAA,MAAM,EAAEoB,UAHV;AAIE,MAAA,IAAI,EAAEG,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCH,OAAhC,CAFF,CADF;AAMD;AAED,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,iBAAiB,EAAExC,KAAK,CAACyC,kBADhB;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Alert } from 'react-native';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\n\nimport Navbar from './src/components/Navbar';\nimport MainScreen from './src/screens/MainScreen';\nimport TodoScreen from './src/screens/TodoScreen';\nimport { THEME } from './src/theme';\n\nasync function loadApplication() {\n  await Font.loadAsync({\n    'roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n    'roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n  });\n}\n\ninterface TodosList {\n  id: string;\n  title: string;\n}\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n  const [todos, setTodos] = useState<TodosList[]>([\n    { id: '1', title: 'RN'},\n    { id: '2', title: 'RN RN'},\n    { id: '3', title: 'RN RN RN'}\n  ]);\n  const [todoId, setTodoId] = useState<string | null>(null);\n\n  if (!isReady) {\n    return (\n      <AppLoading\n        startAsync={loadApplication}\n        onError={(err) => console.error(err)}\n        onFinish={() => setIsReady(true)}\n      />\n    );\n  }\n\n  function addTodo(title: string): void {\n    setTodos((prev) => [\n      ...prev,\n      {\n        id: Date.now().toString(),\n        title: title,\n      },\n    ]);\n  }\n\n  function removeTodo(id: string) {\n    const todo = todos.find((todo) => todo.id === id);\n\n    Alert.alert(\n      'Удаление элемента',\n      `Удалить элемент? ${todo?.title}`,\n      [\n        {\n          text: 'Отмена',\n          style: 'cancel',\n        },\n        {\n          text: 'Удалить',\n          style: 'destructive',\n          onPress: () => {\n            console.log('ef[f[f[f')\n            setTodoId(null);\n            setTodos((prev) => prev.filter((todo) => todo.id !== id));\n          },\n        },\n      ],\n      { cancelable: false }\n    );\n  }\n\n  function updateTodo(id: string, title: string) {\n    setTodos((prev) =>\n      prev.map((todo) => {\n        if (todo.id === id) {\n          todo.title = title;\n        }\n        return todo;\n      })\n    );\n  }\n\n  let content = (\n    <MainScreen\n      todos={todos}\n      addTodo={addTodo}\n      removeTodo={removeTodo}\n      openTodo={setTodoId}\n    />\n  );\n\n  if (todoId) {\n    const selectedTodo = todos.find((todo) => todo.id === todoId);\n    content = (\n      <TodoScreen\n        onRemove={removeTodo}\n        goBack={() => setTodoId(null)}\n        onSave={updateTodo}\n        todo={selectedTodo!}\n      />\n    );\n  }\n\n  return (\n    <View>\n      <Navbar title='Todo App!' />\n      <View style={styles.container}>{content}</View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: THEME.PADDING_HORIZONTAL,\n    paddingVertical: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}