{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/mokss/Work/RN-PRACTICE/src/components/UI/AppButton.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppTextBold from \"./AppTextBold\";\nimport { THEME } from \"../../theme\";\n\nfunction AppButton(_ref) {\n  var children = _ref.children,\n      onPress = _ref.onPress,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? THEME.MAIN_COLOR : _ref$color;\n  var Wrapper = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n  return React.createElement(Wrapper, {\n    activeOpacity: 0.7,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.button), {}, {\n      backgroundColor: color\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(AppTextBold, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, children)));\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: '#fff'\n  }\n});\nexport default AppButton;","map":{"version":3,"sources":["/home/mokss/Work/RN-PRACTICE/src/components/UI/AppButton.tsx"],"names":["React","AppTextBold","THEME","AppButton","children","onPress","color","MAIN_COLOR","Wrapper","Platform","OS","TouchableNativeFeedback","TouchableOpacity","styles","button","backgroundColor","text","StyleSheet","create","paddingHorizontal","paddingVertical","borderRadius","flexDirection","alignItems","justifyContent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAmC,OAAnC;;;;;;AAUA,OAAOC,WAAP;AACA,SAASC,KAAT;;AAQA,SAASC,SAAT,OAImB;AAAA,MAHjBC,QAGiB,QAHjBA,QAGiB;AAAA,MAFjBC,OAEiB,QAFjBA,OAEiB;AAAA,wBADjBC,KACiB;AAAA,MADjBA,KACiB,2BADTJ,KAAK,CAACK,UACG;AACjB,MAAMC,OAA4E,GAChFC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,uBAA5B,GAAsDC,gBADxD;AAGA,SACE,oBAAC,OAAD;AAAS,IAAA,aAAa,EAAE,GAAxB;AAA6B,IAAA,OAAO,EAAEP,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOQ,MAAM,CAACC,MAAd;AAAsBC,MAAAA,eAAe,EAAET;AAAvC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEO,MAAM,CAACG,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCZ,QAAlC,CADF,CADF,CADF;AAOD;;AAED,IAAMS,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,iBAAiB,EAAE,EADb;AAENC,IAAAA,eAAe,EAAE,EAFX;AAGNC,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,aAAa,EAAE,KAJT;AAKNC,IAAAA,UAAU,EAAE,QALN;AAMNC,IAAAA,cAAc,EAAE;AANV,GADuB;AAS/BR,EAAAA,IAAI,EAAE;AACJV,IAAAA,KAAK,EAAE;AADH;AATyB,CAAlB,CAAf;AAcA,eAAeH,SAAf","sourcesContent":["import React, {ComponentType} from 'react';\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  Platform,\n  TouchableOpacityProps,\n  TouchableNativeFeedbackProps\n} from 'react-native';\nimport AppTextBold from './AppTextBold';\nimport { THEME } from '../../theme';\n\ninterface AppButtonProps {\n  children: React.ReactNode;\n  onPress(): void;\n  color?: string;\n}\n\nfunction AppButton({\n  children,\n  onPress,\n  color = THEME.MAIN_COLOR,\n}: AppButtonProps) {\n  const Wrapper: ComponentType<TouchableOpacityProps | TouchableNativeFeedbackProps> =\n    Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n\n  return (\n    <Wrapper activeOpacity={0.7} onPress={onPress}>\n      <View style={{ ...styles.button, backgroundColor: color }}>\n        <AppTextBold style={styles.text}>{children}</AppTextBold>\n      </View>\n    </Wrapper>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#fff',\n  },\n});\n\nexport default AppButton;\n"]},"metadata":{},"sourceType":"module"}